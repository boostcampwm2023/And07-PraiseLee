generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DATABASE_URL")
}

model User {
  uuid            String      @id @db.Char(36)
  kakaoUser       KakaoUser?
  profiles        Profile[]
  refreshTokens   RefreshToken[]
}

model KakaoUser {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  userUuid  String  @unique
  user      User    @relation(fields: [userUuid], references: [uuid], onDelete: Cascade)
}

model RefreshToken {
  id          Int       @id @default(autoincrement())
  token       String    @db.VarChar(210) @unique
  expiryDate  DateTime
  userUuid    String    @db.Char(36)
  user        User      @relation(fields: [userUuid], references: [uuid], onDelete: Cascade)
}

model Profile {
  uuid      String  @id @db.Char(36)
  userUuid  String  @unique @db.Char(36)
  image     String
  nickname  String  @db.VarChar(20)
  user      User    @relation(fields: [userUuid], references: [uuid], onDelete: Cascade)
  spaces    ProfileSpace[]
}

model Space {
  uuid          String          @id @db.Char(36)
  name          String          @db.VarChar(20)
  icon          String
  profileSpaces ProfileSpace[]
  inviteCodes   InviteCode[]
}

model ProfileSpace {
  spaceUuid   String  @db.Char(36)
  profileUuid String  @db.Char(36)
  space       Space   @relation(fields: [spaceUuid], references: [uuid], onDelete: Cascade)
  profile     Profile @relation(fields: [profileUuid], references: [uuid], onDelete: Cascade)
  @@unique([spaceUuid, profileUuid])
}

model InviteCode {
  uuid        String   @id     @db.Char(36)
  inviteCode  String   @unique @db.VarChar(10)
  spaceUuid   String   @db.Char(36)
  expiryDate  DateTime
  space       Space    @relation(fields: [spaceUuid], references: [uuid], onDelete: Cascade)
}
